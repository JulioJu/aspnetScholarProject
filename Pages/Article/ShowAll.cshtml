@page "{handler?}"
@model Videotheque.Pages.ArticlePage.ShowAll

@{
  Layout = "../Layout/_ShowAll.cshtml";
  ViewData["Title"] = "Article Create";
  ViewData["h1"] = "List of articles";
}

@section Search {
  @if (HttpContext.Request.Path.ToString().EndsWith("CurrentlyBorrowed",
    System.StringComparison.InvariantCultureIgnoreCase))
  {
    <h2>Articles only borrowed (ordered by return date)</h2>
    <a class="btn" asp-page="/Article/ShowAll">
      Come back to list of all Articles
    </a>
  }
  else
  {
    <form method="GET">
      <input type="submit"
        value="Show only articles borrowed (ordered by return date)"
        class="btn" asp-page-handler="CurrentlyBorrowed" />
    </form>
  }
}

@section Thead {
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].FilmId)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].Film)
    @Html.DisplayNameFor(model => model.AbstractEntities[0].Film.Title)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].Disc)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].Box)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].IsLost)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].CountBorrowing)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].Comment)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].BorrowingDate)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].ReturnDate)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].BorrowerId)
  </th>
  <th>
    @Html.DisplayNameFor(model => model.AbstractEntities[0].Borrower)
    @Html.DisplayNameFor(model => model.AbstractEntities[0].Borrower.Address)
  </th>
}

<!-- vim:sw=2:ts=2:et:fileformat=dos
--
