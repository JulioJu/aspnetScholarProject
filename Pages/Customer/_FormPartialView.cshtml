@using Videotheque.Data
@model Customer
@{
  string[] ValidationMessageArticleIdToBorrowArray =
    (string[])ViewData["ValidationMessageArticleIdToBorrowArray"];
  string[] ArticleIdToBorrowArrayInputValue =
    (string[])ViewData["ArticleIdToBorrowArrayInputValue"];
  string[] ShouldBeRemovedArray =
    (string[])ViewData["ShouldBeRemovedArray"];
}

<div class="form-group">
  <label asp-for="Firstname" class="control-label"></label>
  <input asp-for="Firstname" class="form-control" />
  <span asp-validation-for="Firstname" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Lastname" class="control-label"></label>
  <input asp-for="Lastname" class="form-control" />
  <span asp-validation-for="Lastname" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Birthdate" class="control-label"></label>
  <input asp-for="Birthdate" class="form-control" />
  <span asp-validation-for="Birthdate" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Society" class="control-label"></label>
  <input asp-for="Society" class="form-control" />
  <span asp-validation-for="Society" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Address" class="control-label"></label>
  <input asp-for="Address" class="form-control" />
  <span asp-validation-for="Address" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Phone" class="control-label"></label>
  <input asp-for="Phone" class="form-control" />
  <span asp-validation-for="Phone" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Email" class="control-label"></label>
  <input asp-for="Email" class="form-control" />
  <span asp-validation-for="Email" class="text-danger"></span>
</div>

@{
  if (@Context.Request.Path.ToString().Contains("/Edit/",
      System.StringComparison.InvariantCultureIgnoreCase))
  {
    if (Model.CurrentlyBorrowed.Count > 0)
    {
        @:<table id="CustomerEditArticlesCurrentlyBorrowed">
        <thead>
          <tr>
            <td>
              Article borrowed <br /> (barcode)
            </td>
            <td>
              Film Id <br />
            </td>
            <td>
              Film title
            </td>
            <td>
              Do you want return it?
            </td>
            <td>
              Should be returned before
            </td>
          </tr>
        </thead>
        @:<tbody>
      int index=0;
      foreach (Article article in Model.CurrentlyBorrowed)
      {
        bool isSelectFalse = true;
        bool isSelectTrue = false;
        if (ShouldBeRemovedArray != null
            && ShouldBeRemovedArray[index].Equals("true",
              System.StringComparison.InvariantCultureIgnoreCase))
        {
          isSelectFalse = false;
          isSelectTrue = true;
        }
        <tr class="form-group">
          <td>
            <input type="hidden" name="articleIdAlreadyBorrowedArray"
              value="@article.Id" />
            <a asp-page="/Article/Details"
                asp-route-id="@article.Id">
              @article.Id
            </a>
          </td>
          <td>
            <a asp-page="/Film/Details"
                asp-route-id="@article.FilmId">
              @article.FilmId
            </a>
          </td>
          <td>
            @article.Film.Title
          </td>
          <td>
            <select name="shouldBeRemovedArray">
              <option value="false" selected="@isSelectFalse">Keep</option>
              <option value="true" selected="@isSelectTrue">Return</option>
            </select>
          </td>
          <td> @article.ReturnDate?.ToShortDateString() </td>
        </tr>
        index++;
      }
        @:</tbody>
        @:</table>
    }
    else
    {
      <p>No articles currently borrowed</p>
    }


    <!-- We could make four new borrowing -->
    @:<table>
    <thead>
      <tr>
        <td>
          Article borrowed <br /> (barcode)
        </td>
        <td>
          Loan duration
        </td>
      <tr>
    </thead>
    @:<tbody>
    for (int index=0 ;
          index < ValidationMessageArticleIdToBorrowArray.Length ;
          index++)
    {
      <tr class="form-group">
        <td>
          <input type="number" name="articleIdToBorrowArray"
              placeholder="Article Barcode (id)"
              value="@ArticleIdToBorrowArrayInputValue[index]">
          <div class="text-danger field-validation-error customer-article-message-validation" >
            @Html.Raw(@ValidationMessageArticleIdToBorrowArray[index])
          </div>
        </td>
        <td>
          <select name="articleLoanDurationArray">
            <option value="1">1 days</option>
            <option value="2" selected >2 days</option>
            <option value="5">5 days</option>
            <option value="7">7 days</option>
            <option value="14">14 days</option>
          </select>
        </td>
      </tr>
    }
    @:</tbody>
    @:</table>
  }
}

<!-- vim:sw=2:ts=2:et:fileformat=dos
-->
