@using Videotheque.Data
@model Customer

<div class="form-group">
  <label asp-for="Firstname" class="control-label"></label>
  <input asp-for="Firstname" class="form-control" />
  <span asp-validation-for="Firstname" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Lastname" class="control-label"></label>
  <input asp-for="Lastname" class="form-control" />
  <span asp-validation-for="Lastname" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Society" class="control-label"></label>
  <input asp-for="Society" class="form-control" />
  <span asp-validation-for="Society" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Address" class="control-label"></label>
  <input asp-for="Address" class="form-control" />
  <span asp-validation-for="Address" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Phone" class="control-label"></label>
  <input asp-for="Phone" class="form-control" />
  <span asp-validation-for="Phone" class="text-danger"></span>
</div>
<div class="form-group">
  <label asp-for="Email" class="control-label"></label>
  <input asp-for="Email" class="form-control" />
  <span asp-validation-for="Email" class="text-danger"></span>
</div>

@{
  if (@Context.Request.Path.ToString().Contains("/Edit/",
      System.StringComparison.InvariantCultureIgnoreCase))
  {
    @:<table id="CustomerEditArticlesCurrentlyBorrowed">
      @:<tr>
        @:<td>
          @:<label for="articleIdAlreadyBorrowedArray" class="control-label">
          @:  Article Borrowed
          @:</label>
        @:</td>
        @:<td>
          @:<label for="shouldBeRemovedArray"
          @:    class="control-label">
          @:  Should be removed
          @:</label>
        @:</td>
      @:</tr>
      foreach (Article article in Model.CurrentlyBorrowed)
      {
        @:<tr class="form-group">
          @:<td>
            @:<input type="hidden" name="articleIdAlreadyBorrowedArray"
            @:  value="@article.Id" />
            @:<span>@article.Id</span>
          @:</td>
          @:<td>
            @:<!-- Can't use checkbox, because the array shouldBeRemovedArray
            @:  contains only checkbox with true values (therfore if all
            @:  checkbox are not selected, shorter than
            @:  articleIdAlreadyBorrowedArray)-->
            @:<span>(return date: @article.ReturnDate?.ToShortDateString())</span>
            @:<select name="shouldBeRemovedArray" value="false" >
            @:  <option value="false" selected>Continue borrowing</option>
            @:  <option value="true" >Return</option>
            @:</select>
        @:</td>
        @:</tr>
      }
      @:<tr>
        @:<td>
          @:<label for="articleIdBorrowedArray" class="control-label">
          @:  Article Borrowed
          @:</label>
        @:</td>
        @:<td>
          @:<label for="articleIdBorrowedArray" class="control-label">
          @:  Loan duration
          @:</label>
        @:</td>
      @:<tr>
      for (int index=0 ; index < 4 ; index++)
      {
        @:<tr class="form-group">
          @:<td>
            @:<input type="number" name="articleIdToBorrowArray"
            @:    placeholder="Article Barcode (id)" />
          @:</td>
          @:<td>
            @:<select name="articleLoanDurationArray">
            @:  <!-- <option value="">&#45;&#45;Loan duration&#45;&#45;</option> -->
            @:  <option value="1">1 days</option>
            @:  <option value="2" selected >2 days</option>
            @:  <option value="5">5 days</option>
            @:  <option value="7">7 days</option>
            @:  <option value="14">14 days</option>
            @:</select>
          @:<ktd>
        @:</div>
      }
    @:</table>
  }
}

<!-- vim:sw=2:ts=2:et:fileformat=dos
-->
